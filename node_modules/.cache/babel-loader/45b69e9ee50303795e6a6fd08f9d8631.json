{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/component/NewIngredient.js\";\nimport React, { Component } from 'react';\n\nclass NewIngredient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredient: \"\",\n      quantity: \"\",\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //Fuction to handle the change of the inputs and update the state\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      error: null\n    });\n  } //Function to send the data of ingredients to the recipes\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.ingredient === \"\" || this.state.quantity === '') {\n      this.setState({\n        error: true\n      });\n      alert(\"Tienes que llenar los campos para poder agregar un nuevo ingrediente\");\n    } else {\n      const id = `id${this.state.ingredient}-${String(this.state.quantity)}-${Date.now()}`;\n      this.props.add(this.state.ingredient, this.state.quantity, id);\n      this.setState({\n        ingredient: '',\n        quantity: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ingredient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Ingrediente \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"ingredient\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.ingredient,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Cantidades \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"quantity\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.quantity,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Agregar ingrediente\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NewIngredient;","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/component/NewIngredient.js"],"names":["React","Component","NewIngredient","constructor","props","state","ingredient","quantity","error","handleChange","bind","handleSubmit","event","setState","target","name","value","preventDefault","alert","id","String","Date","now","add","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass NewIngredient extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            ingredient: \"\",\n            quantity: \"\",\n            error: null\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n     \n\n    //Fuction to handle the change of the inputs and update the state\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value,\n            error: null\n        });\n    }\n\n    //Function to send the data of ingredients to the recipes\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.state.ingredient === \"\" || this.state.quantity === ''){\n            this.setState({\n                error: true\n            });\n            alert(\"Tienes que llenar los campos para poder agregar un nuevo ingrediente\");\n        }\n        else{\n            const id = `id${this.state.ingredient}-${String(this.state.quantity)}-${Date.now()}`;\n            this.props.add(this.state.ingredient, this.state.quantity, id);\n            this.setState({ingredient: '', quantity: ''});\n        }\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <hr/>\n                <label htmlFor=\"ingredient\">Ingrediente </label>\n                <input name=\"ingredient\" \n                type=\"text\"\n                onChange={this.handleChange} \n                value={this.state.ingredient}\n                className={this.state.error ? `is-invalid form-control` : `form-control`}\n                />\n                <label htmlFor=\"quantity\">Cantidades </label>\n                <input name=\"quantity\"\n                type='text'\n                onChange={this.handleChange} \n                value={this.state.quantity}\n                className={this.state.error ? `is-invalid form-control` : `form-control`}\n                />\n                <br/>\n                <input type=\"submit\"\n                value=\"Agregar ingrediente\"\n                className=\"btn btn-primary\"/>\n            </form>\n        )\n    }\n}\n\nexport default NewIngredient;"]},"metadata":{},"sourceType":"module"}