{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/component/Form.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      nombre: \"\",\n      calorias: 0,\n      ingredientes: [],\n      error: null\n    };\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.location.state !== undefined) {\n      this.setState({ ...this.locarion.state\n      }, () => {\n        console.log(state);\n      });\n    }\n\n    console.log(this.props);\n  } //Function to handle the changes in the form and update the state\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      error: null\n    });\n  } //This function catch the data of news ingredients of the Ingredient component \n  //and update the state to add news ingredients\n\n\n  addIngredient(ing, cant, id) {\n    let newing = {\n      id: id,\n      ingrediente: ing,\n      cantidad: cant\n    };\n    this.setState({\n      ingredientes: [...this.state.ingredientes, newing]\n    });\n  } //Function to add a new recipe in the main\n\n\n  handleSubmit() {\n    if (this.state.nombre === \"\" || this.state.ingredientes.length === 0) {\n      this.setState({\n        error: true\n      });\n      alert('Debes debes de llenar todos los campos para poder agregar una nueva receta y tener al menos un igrediente');\n    } else {\n      this.setState({\n        id: `id${this.state.nombre}-${String(this.state.calorias)}-${Date.now()}`\n      }, () => {\n        console.log(this.state);\n        this.props.new(this.state);\n        alert('Se ha agregado una nueva receta');\n        this.props.history.push('/');\n      });\n    }\n  } //Funsion to delete an ingredient of the list\n\n\n  deleteIngredient(id) {\n    this.setState({\n      ingredientes: this.state.ingredientes.filter(ig => ig.id !== id)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Agregar una nueva receta\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"nombre\",\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      onChange: this.handleChange,\n      value: this.state.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"calorias\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Calorias\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"calorias\",\n      value: this.state.calorias,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      onChange: this.handleChange,\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Ingredientes:\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, this.state.ingredientes.map(ingrediente => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: ingrediente.id,\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, ingrediente.ingrediente), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, ingrediente.cantidad, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger\",\n        onClick: () => {\n          this.deleteIngredient(ingrediente.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      }, \"X\"));\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Agregar receta\"), /*#__PURE__*/React.createElement(Ingrediente, {\n      add: this.addIngredient,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(Form);","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/component/Form.js"],"names":["React","Component","withRouter","Ingrediente","Form","constructor","props","state","id","nombre","calorias","ingredientes","error","deleteIngredient","bind","handleChange","addIngredient","handleSubmit","componentDidMount","location","undefined","setState","locarion","console","log","event","target","name","value","ing","cant","newing","ingrediente","cantidad","length","alert","String","Date","now","new","history","push","filter","ig","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            id: \"\",\n            nombre: \"\",\n            calorias: 0,\n            ingredientes: [],\n            error: null\n        }\n        this.deleteIngredient = this.deleteIngredient.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addIngredient = this.addIngredient.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.location.state !== undefined){\n            this.setState({\n                ...this.locarion.state\n            }, \n                () => {\n                    console.log(state);\n                }\n            )\n        }\n        console.log(this.props);\n    }\n\n    //Function to handle the changes in the form and update the state\n    handleChange(event){\n        this.setState({ \n            [event.target.name]: event.target.value,\n            error: null \n        });\n    }\n\n    //This function catch the data of news ingredients of the Ingredient component \n    //and update the state to add news ingredients\n    addIngredient(ing, cant, id){\n        let newing = {\n            id: id,\n            ingrediente: ing,\n            cantidad: cant\n        }\n        this.setState({\n            ingredientes: [...this.state.ingredientes, newing]\n        });\n    }\n\n    //Function to add a new recipe in the main\n    handleSubmit(){\n        if(this.state.nombre === \"\" || this.state.ingredientes.length === 0){\n            this.setState({\n                error: true\n            })\n            alert('Debes debes de llenar todos los campos para poder agregar una nueva receta y tener al menos un igrediente');\n        }else{\n            this.setState(\n                {id: `id${this.state.nombre}-${String(this.state.calorias)}-${Date.now()}`},\n                () => {\n                    console.log(this.state);\n                    this.props.new(this.state);\n                    alert('Se ha agregado una nueva receta');\n                    this.props.history.push('/');\n                }\n            );\n        }\n    }\n\n    //Funsion to delete an ingredient of the list\n    deleteIngredient(id){\n        this.setState({\n            ingredientes: this.state.ingredientes.filter(ig => ig.id !== id)\n        });\n    }\n    \n    render(){\n        return(\n            <section>\n                <h1>Agregar una nueva receta</h1>\n                <form>\n                    <label htmlFor=\"name\">Nombre</label>\n\n                    <input name=\"nombre\" \n                    className={this.state.error ? `is-invalid form-control` : `form-control`}\n                    onChange={this.handleChange} \n                    value={this.state.nombre}/>\n                    <label htmlFor=\"calorias\">Calorias</label>\n                    <input name='calorias' value={this.state.calorias}\n                    className={this.state.error ? `is-invalid form-control` : `form-control`}\n                    onChange={this.handleChange} type=\"number\"/>\n                    <h4>Ingredientes:</h4>\n                </form>\n                <ul className='list-group'>         \n                {\n                    this.state.ingredientes.map((ingrediente) => {\n                        return(\n                            <li \n                            key={ingrediente.id}\n                            className=\"list-group-item\">\n                                <span>{ingrediente.ingrediente}</span>\n                                <span> - </span>\n                                <span>{ingrediente.cantidad} </span>\n                                <button type=\"button\" \n                                className='btn btn-outline-danger'\n                                onClick={() => {this.deleteIngredient(ingrediente.id)}}>\n                                    X\n                                </button>\n                            </li>\n                        );\n                    })\n                }\n                </ul>\n                <br/>\n                <button onClick={this.handleSubmit} className=\"btn btn-primary\">Agregar receta</button>\n                <Ingrediente add={this.addIngredient} history={this.props.history}/>\n            </section>\n        )\n    }\n}\n\nexport default withRouter(Form);"]},"metadata":{},"sourceType":"module"}