{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/component/Form.js\";\nimport React, { Component } from 'react';\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addRecipe = () => {\n      if (this.state.nombre === \"\" || this.state.ingredientes.length === 0) {\n        alert('Debes debes de llenar todos los campos para poder agregar una nueva receta');\n      } else {\n        this.props.new(this.state);\n      }\n    };\n\n    this.state = {\n      nombre: \"\",\n      calorias: 0,\n      ingredientes: []\n    };\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n    this.addRecipe = this.addRecipe.bind(this);\n  } //Function to handle the changes in the form and update the state\n\n\n  //This function catch the data of news ingredients of the Ingredient component \n  //and update the state to add news ingredients\n  addIngredient(ing, cant) {\n    let newing = {\n      ingrediente: ing,\n      cantidad: cant\n    };\n    this.setState({\n      ingredientes: [...this.state.ingredientes, newing]\n    });\n  } //Function to add a new recipe in the main\n\n\n  //Funsion to delete an ingredient of the list\n  deleteIngredient(key) {\n    console.log('click'); //console.log(key.target)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Agregar una nueva receta\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"nombre\",\n      onChange: this.handleChange,\n      value: this.state.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"calorias\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Calorias\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"calorias\",\n      value: this.state.calorias,\n      onChange: this.handleChange,\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Ingredientes:\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, this.state.ingredientes.map((ingrediente, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, ingrediente.ingrediente), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, ingrediente.cantidad, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        style: {\n          background: 'red',\n          color: \"white\"\n        },\n        onClick: this.deleteIngredient(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, \" X \"));\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Agregar receta\"), /*#__PURE__*/React.createElement(Ingrediente, {\n      add: this.addIngredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/component/Form.js"],"names":["React","Component","Ingrediente","Form","constructor","props","handleChange","event","setState","target","name","value","addRecipe","state","nombre","ingredientes","length","alert","new","calorias","deleteIngredient","bind","addIngredient","ing","cant","newing","ingrediente","cantidad","key","console","log","render","map","index","background","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            nombre: \"\",\n            calorias: 0,\n            ingredientes: []\n        }\n        this.deleteIngredient = this.deleteIngredient.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addIngredient = this.addIngredient.bind(this);\n        this.addRecipe = this.addRecipe.bind(this);\n    }\n    \n\n    //Function to handle the changes in the form and update the state\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    //This function catch the data of news ingredients of the Ingredient component \n    //and update the state to add news ingredients\n    addIngredient(ing, cant){\n        let newing = {\n            ingrediente: ing,\n            cantidad: cant\n        }\n        this.setState({\n            ingredientes: [...this.state.ingredientes, newing]\n        });\n    }\n\n    //Function to add a new recipe in the main\n    addRecipe = () => {\n        if(this.state.nombre === \"\" || this.state.ingredientes.length === 0){\n            alert('Debes debes de llenar todos los campos para poder agregar una nueva receta');\n        }else{\n            this.props.new(this.state);\n        }\n    }\n\n    //Funsion to delete an ingredient of the list\n    deleteIngredient(key){\n        console.log('click');\n        //console.log(key.target)\n    }\n    \n\n    render(){\n        return(\n            <section>\n                <h1>Agregar una nueva receta</h1>\n                <form>\n                    <label htmlFor=\"name\">Nombre</label>\n                    <br/>\n                    <input name=\"nombre\" \n                    onChange={this.handleChange} \n                    value={this.state.nombre}/>\n                    <br/>\n                    <label htmlFor=\"calorias\">Calorias</label>\n                    <br/>\n                    <input name='calorias' value={this.state.calorias}\n                    onChange={this.handleChange} type=\"number\"/>\n                    <h4>Ingredientes:</h4>\n                </form>\n                <ul>         \n                {\n                    this.state.ingredientes.map((ingrediente, index) => {\n                        return(\n                            <li key={index}>\n                                <span>{ingrediente.ingrediente}</span>\n                                <span> - </span>\n                                <span>{ingrediente.cantidad} </span>\n                                <button type=\"button\" \n                                style={{background: 'red', color: \"white\"}}\n                                onClick={this.deleteIngredient(index)}> X </button>\n                            </li>\n                        );\n                    })\n                }\n                </ul>\n                <br/>\n                <button onClick={this.addRecipe}>Agregar receta</button>\n                <Ingrediente add={this.addIngredient}/>\n            </section>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}