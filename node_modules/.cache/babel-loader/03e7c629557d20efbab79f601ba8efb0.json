{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/component/Form.js\";\nimport React, { Component } from 'react';\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nombre: \"\",\n      calorias: 0,\n      ingredientes: []\n    };\n\n    this.inputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addRecipe = () => {\n      if (this.state.nombre === \"\" || this.state.ingredientes.length === 0) {\n        alert('Debes debes de llenar todos los campos para poder agregar una nueva receta');\n      } else {\n        this.props.new(this.state);\n      }\n    };\n  }\n\n  //This function catch the data of news ingredients of the Ingredient component \n  //and update the state to add news ingredients\n  addIngredient(ing, cant) {\n    let newing = {\n      ingrediente: ing,\n      cantidad: cant\n    };\n    this.setState({\n      ingredientes: [...this.state.ingredientes, newing]\n    });\n  } //Function to add a new recipe in the main\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Agregar una nueva receta\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"nombre\",\n      onChange: this.inputChange,\n      value: this.state.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"calorias\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Calorias\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"calorias\",\n      value: this.state.calorias,\n      onChange: this.inputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Ingredientes:\")), this.state.ingredientes.map((ingrediente, index) => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, ingrediente.ingrediente), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, ingrediente.cantidad), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, \"Eliminar ingrediente\")));\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addRecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Agregar receta\"), /*#__PURE__*/React.createElement(Ingrediente, {\n      add: this.addIngredient.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/component/Form.js"],"names":["React","Component","Ingrediente","Form","state","nombre","calorias","ingredientes","inputChange","event","setState","target","name","value","addRecipe","length","alert","props","new","addIngredient","ing","cant","newing","ingrediente","cantidad","render","map","index","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n\n    state = {\n        nombre: \"\",\n        calorias: 0,\n        ingredientes: []\n    }\n\n    //Function to handle the changes in the form and update the state\n    inputChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    //This function catch the data of news ingredients of the Ingredient component \n    //and update the state to add news ingredients\n    addIngredient(ing, cant){\n        let newing = {\n            ingrediente: ing,\n            cantidad: cant\n        }\n        this.setState({\n            ingredientes: [...this.state.ingredientes, newing]\n        });\n    }\n\n    //Function to add a new recipe in the main\n    addRecipe = () => {\n        if(this.state.nombre === \"\" || this.state.ingredientes.length === 0){\n            alert('Debes debes de llenar todos los campos para poder agregar una nueva receta');\n        }else{\n         this.props.new(this.state);\n        }\n    }\n\n    render(){\n        return(\n            <section>\n                <h1>Agregar una nueva receta</h1>\n                <form>\n                    <label htmlFor=\"name\">Nombre</label>\n                    <br/>\n                    <input name=\"nombre\" \n                    onChange={this.inputChange} \n                    value={this.state.nombre}/>\n                    <br/>\n                    <label htmlFor=\"calorias\">Calorias</label>\n                    <br/>\n                    <input name='calorias' value={this.state.calorias}\n                    onChange={this.inputChange}/>\n                    <h4>Ingredientes:</h4>\n                </form>\n                {\n                    this.state.ingredientes.map((ingrediente, index) => {\n                        return(\n                            <ul key={index}>\n                                <li>\n                                    <span>{ingrediente.ingrediente}</span>\n                                    <span> - </span>\n                                    <span>{ingrediente.cantidad}</span>\n                                    <button type=\"button\">Eliminar ingrediente</button>\n                                </li>\n                            </ul>\n                        );\n                    })\n                }\n                <br/>\n                <button onClick={this.addRecipe}>Agregar receta</button>\n                <Ingrediente add={this.addIngredient.bind(this)}/>\n            </section>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}