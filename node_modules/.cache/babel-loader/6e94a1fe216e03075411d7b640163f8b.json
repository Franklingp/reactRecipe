{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/pages/NewRecipe.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NewIngredient from '../component/NewIngredient';\n\nclass NewRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      calories: 0,\n      ingredients: [],\n      error: null\n    };\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleIngredient = this.handleIngredient.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.isEdit = false;\n  }\n\n  componentDidMount() {\n    if (this.props.location.state !== undefined) {\n      this.isEdit = true;\n      this.setState({ ...this.props.location.state\n      });\n    }\n  } //Function to handle the changes in the form and update the state\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      error: null\n    });\n  } //This function catch the data of news ingredients of the Ingredient component \n  //and update the state to add news ingredients\n\n\n  handleIngredient(ing, cant, id) {\n    let newIngredient = {\n      id: id,\n      ingredient: ing,\n      quantiry: cant\n    };\n    this.setState({\n      ingredientes: [...this.state.ingredientes, newIngredient]\n    });\n  } //Function to add a new recipe in the main\n\n\n  handleSubmit() {\n    if (this.state.nombre === \"\" || this.state.ingredientes.length === 0) {\n      this.setState({\n        error: true\n      });\n      alert('Debes debes de llenar todos los campos para poder agregar una nueva receta y tener al menos un igrediente');\n    } else {\n      if (this.isEdit === true) {\n        this.props.new(this.state, this.isEdit);\n        alert('Se ha editado la receta correctamente');\n        this.props.history.push('/');\n      } else {\n        this.setState({\n          id: `id${this.state.nombre}-${String(this.state.calorias)}-${Date.now()}`\n        }, () => {\n          this.props.new(this.state, this.isEdit);\n          alert('Se ha agregado una nueva receta');\n          this.props.history.push('/');\n        });\n      }\n    }\n  } //Funsion to delete an ingredient of the list\n\n\n  deleteIngredient(id) {\n    this.setState({\n      ingredientes: this.state.ingredientes.filter(ig => ig.id !== id)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Agregar una nueva receta\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"nombre\",\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      onChange: this.handleChange,\n      value: this.state.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"calorias\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Calorias\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"calorias\",\n      value: this.state.calorias,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      onChange: this.handleChange,\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Ingredientes:\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, this.state.ingredientes.map((ingrediente, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: ingrediente.id || index,\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, ingrediente.ingrediente), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }, ingrediente.cantidad, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger\",\n        onClick: () => {\n          this.deleteIngredient(ingrediente.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, \"X\"));\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Agregar receta\"), /*#__PURE__*/React.createElement(NewIngredient, {\n      add: this.handleIngredient,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(NewRecipe);","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/pages/NewRecipe.js"],"names":["React","Component","withRouter","NewIngredient","NewRecipe","constructor","props","state","id","name","calories","ingredients","error","deleteIngredient","bind","handleChange","handleIngredient","handleSubmit","isEdit","componentDidMount","location","undefined","setState","event","target","value","ing","cant","newIngredient","ingredient","quantiry","ingredientes","nombre","length","alert","new","history","push","String","calorias","Date","now","filter","ig","render","map","ingrediente","index","cantidad"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport NewIngredient from '../component/NewIngredient';\n\nclass NewRecipe extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            id: \"\",\n            name: \"\",\n            calories: 0,\n            ingredients: [],\n            error: null\n        }\n        this.deleteIngredient = this.deleteIngredient.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleIngredient = this.handleIngredient.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.isEdit = false;\n    }\n\n    componentDidMount(){\n        if(this.props.location.state !== undefined){\n            this.isEdit = true;\n            this.setState({\n                ...this.props.location.state\n            })\n        }\n    }\n\n    //Function to handle the changes in the form and update the state\n    handleChange(event){\n        this.setState({ \n            [event.target.name]: event.target.value,\n            error: null \n        });\n    }\n\n    //This function catch the data of news ingredients of the Ingredient component \n    //and update the state to add news ingredients\n    handleIngredient(ing, cant, id){\n        let newIngredient = {\n            id: id,\n            ingredient: ing,\n            quantiry: cant\n        }\n        this.setState({\n            ingredientes: [...this.state.ingredientes, newIngredient]\n        });\n    }\n\n    //Function to add a new recipe in the main\n    handleSubmit(){\n        if(this.state.nombre === \"\" || this.state.ingredientes.length === 0){\n            this.setState({\n                error: true\n            })\n            alert('Debes debes de llenar todos los campos para poder agregar una nueva receta y tener al menos un igrediente');\n        }else{\n            if(this.isEdit === true){\n                this.props.new(this.state, this.isEdit);\n                alert('Se ha editado la receta correctamente');\n                this.props.history.push('/');\n            }else{\n                this.setState(\n                    {id: `id${this.state.nombre}-${String(this.state.calorias)}-${Date.now()}`},\n                    () => {\n                        this.props.new(this.state, this.isEdit);\n                        alert('Se ha agregado una nueva receta');\n                        this.props.history.push('/');\n                    }\n                );\n            } \n        }\n    }\n\n    //Funsion to delete an ingredient of the list\n    deleteIngredient(id){\n        this.setState({\n            ingredientes: this.state.ingredientes.filter(ig => ig.id !== id)\n        });\n    }\n    \n    render(){\n        return(\n            <section>\n                <h1>Agregar una nueva receta</h1>\n                <form>\n                    <label htmlFor=\"name\">Nombre</label>\n\n                    <input name=\"nombre\" \n                    className={this.state.error ? `is-invalid form-control` : `form-control`}\n                    onChange={this.handleChange} \n                    value={this.state.nombre}/>\n                    <label htmlFor=\"calorias\">Calorias</label>\n                    <input name='calorias' value={this.state.calorias}\n                    className={this.state.error ? `is-invalid form-control` : `form-control`}\n                    onChange={this.handleChange} type=\"number\"/>\n                    <h4>Ingredientes:</h4>\n                </form>\n                <ul className='list-group'>         \n                {\n                    this.state.ingredientes.map((ingrediente, index) => {\n                        return(\n                            <li \n                            key={ingrediente.id || index}\n                            className=\"list-group-item\">\n                                <span>{ingrediente.ingrediente}</span>\n                                <span> - </span>\n                                <span>{ingrediente.cantidad} </span>\n                                <button type=\"button\" \n                                className='btn btn-outline-danger'\n                                onClick={() => {this.deleteIngredient(ingrediente.id)}}>\n                                    X\n                                </button>\n                            </li>\n                        );\n                    })\n                }\n                </ul>\n                <br/>\n                <button onClick={this.handleSubmit} className=\"btn btn-primary\">Agregar receta</button>\n                <NewIngredient add={this.handleIngredient} history={this.props.history}/>\n            </section>\n        )\n    }\n}\n\nexport default withRouter(NewRecipe);"]},"metadata":{},"sourceType":"module"}