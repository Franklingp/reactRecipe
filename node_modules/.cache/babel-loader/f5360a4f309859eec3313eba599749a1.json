{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/component/Ingrediente.js\";\nimport React, { Component } from 'react';\n\nclass Ingrediente extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingrediente: \"\",\n      cantidad: \"\",\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //Fuction to handle the change of the inputs and update the state\n\n\n  handleChange(event) {\n    this.setState({\n      error: null\n    });\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } //Function to send the data of ingredients to the recipes\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.ingrediente === \"\" || this.state.cantidad === '') {\n      this.setState({\n        error: \"Tienes que llenar los campos para poder agregar un nuevo ingrediente\"\n      });\n    } else {\n      const id = `id${this.state.ingrediente}-${String(this.state.cantidad)}-${Date.now()}`;\n      this.props.add(this.state.ingrediente, this.state.cantidad, id);\n      this.setState({\n        ingrediente: '',\n        cantidad: ''\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ingrediente\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Ingrediente \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"ingrediente\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.ingrediente,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cantidad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Cantidades \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"cantidad\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.cantidad,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Agregar ingrediente\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Ingrediente;","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/component/Ingrediente.js"],"names":["React","Component","Ingrediente","constructor","props","state","ingrediente","cantidad","error","handleChange","bind","handleSubmit","event","setState","target","name","value","preventDefault","id","String","Date","now","add","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAEhCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,WAAW,EAAE,EADL;AAERC,MAAAA,QAAQ,EAAE,EAFF;AAGRC,MAAAA,KAAK,EAAE;AAHC,KAAZ;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH,GAX+B,CAchC;;;AACAD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAE;AADG,KAAd;AAGA,SAAKK,QAAL,CAAc;AAAC,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAAnC,KAAd;AACH,GApB+B,CAsBhC;;;AACAL,EAAAA,YAAY,CAACC,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAG,KAAKZ,KAAL,CAAWC,WAAX,KAA2B,EAA3B,IAAiC,KAAKD,KAAL,CAAWE,QAAX,KAAwB,EAA5D,EAA+D;AAC3D,WAAKM,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH,KAJD,MAKI;AACA,YAAMU,EAAE,GAAI,KAAI,KAAKb,KAAL,CAAWC,WAAY,IAAGa,MAAM,CAAC,KAAKd,KAAL,CAAWE,QAAZ,CAAsB,IAAGa,IAAI,CAACC,GAAL,EAAW,EAApF;AACA,WAAKjB,KAAL,CAAWkB,GAAX,CAAe,KAAKjB,KAAL,CAAWC,WAA1B,EAAuC,KAAKD,KAAL,CAAWE,QAAlD,EAA4DW,EAA5D;AACA,WAAKL,QAAL,CAAc;AAACP,QAAAA,WAAW,EAAE,EAAd;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAd;AACH;AACJ;;AAEDgB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,aAAZ;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,QAAQ,EAAE,KAAKF,YAFf;AAGA,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,WAHlB;AAIA,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG,KAAX,GAAoB,yBAApB,GAAgD,cAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eASI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATJ,eAUI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,QAAQ,EAAE,KAAKC,YAFf;AAGA,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,QAHlB;AAIA,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,KAAX,GAAoB,yBAApB,GAAgD,cAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAiBI;AAAO,MAAA,IAAI,EAAC,QAAZ;AACA,MAAA,KAAK,EAAC,qBADN;AAEA,MAAA,SAAS,EAAC,iBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ;AAuBH;;AA7D+B;;AAgEpC,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Ingrediente extends Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            ingrediente: \"\",\n            cantidad: \"\",\n            error: null\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n     \n\n    //Fuction to handle the change of the inputs and update the state\n    handleChange(event){\n        this.setState({\n            error: null\n        });\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    //Function to send the data of ingredients to the recipes\n    handleSubmit(event){\n        event.preventDefault();\n        if(this.state.ingrediente === \"\" || this.state.cantidad === ''){\n            this.setState({\n                error: \"Tienes que llenar los campos para poder agregar un nuevo ingrediente\"\n            });\n        }\n        else{\n            const id = `id${this.state.ingrediente}-${String(this.state.cantidad)}-${Date.now()}`;\n            this.props.add(this.state.ingrediente, this.state.cantidad, id);\n            this.setState({ingrediente: '', cantidad: ''});\n        }\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <hr/>\n                <label htmlFor=\"ingrediente\">Ingrediente </label>\n                <input name=\"ingrediente\" \n                type=\"text\"\n                onChange={this.handleChange} \n                value={this.state.ingrediente}\n                className={this.state.error ? `is-invalid form-control` : `form-control`}\n                />\n                <label htmlFor=\"cantidad\">Cantidades </label>\n                <input name=\"cantidad\"\n                type='text'\n                onChange={this.handleChange} \n                value={this.state.cantidad}\n                className={this.state.error ? `is-invalid form-control` : `form-control`}\n                />\n                <br/>\n                <input type=\"submit\"\n                value=\"Agregar ingrediente\"\n                className=\"btn btn-primary\"/>\n            </form>\n        )\n    }\n}\n\nexport default Ingrediente;"]},"metadata":{},"sourceType":"module"}