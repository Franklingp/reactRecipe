{"ast":null,"code":"var _jsxFileName = \"/home/franklin/workspace/aprendiendoreact/src/component/Form.js\";\nimport React, { Component } from 'react';\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nombre: \"\",\n      calorias: 0,\n      ingredientes: [],\n      error: null\n    };\n    this.deleteIngredient = this.deleteIngredient.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addIngredient = this.addIngredient.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  } //Function to handle the changes in the form and update the state\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      error: null\n    });\n  } //This function catch the data of news ingredients of the Ingredient component \n  //and update the state to add news ingredients\n\n\n  addIngredient(ing, cant, id) {\n    let newing = {\n      id: id,\n      ingrediente: ing,\n      cantidad: cant\n    };\n    this.setState({\n      ingredientes: [...this.state.ingredientes, newing]\n    });\n  } //Function to add a new recipe in the main\n\n\n  handleClick() {\n    if (this.state.nombre === \"\" || this.state.ingredientes.length === 0) {\n      this.setState({\n        error: true\n      });\n      alert('Debes debes de llenar todos los campos para poder agregar una nueva receta y tener al menos un igrediente');\n    } else {\n      this.props.new(this.state);\n    }\n  } //Funsion to delete an ingredient of the list\n\n\n  deleteIngredient(id) {\n    this.setState({\n      ingredientes: this.state.ingredientes.filter(ig => ig.id !== id)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Agregar una nueva receta\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"nombre\",\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      onChange: this.handleChange,\n      value: this.state.nombre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"calorias\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Calorias\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"calorias\",\n      value: this.state.calorias,\n      className: this.state.error ? `is-invalid form-control` : `form-control`,\n      onChange: this.handleChange,\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Ingredientes:\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, this.state.ingredientes.map(ingrediente => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: ingrediente.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, ingrediente.ingrediente), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }, ingrediente.cantidad, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        style: {\n          background: 'red',\n          color: \"white\"\n        },\n        onClick: () => {\n          this.deleteIngredient(ingrediente.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, \" X \"));\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Agregar receta\"), /*#__PURE__*/React.createElement(Ingrediente, {\n      add: this.addIngredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/franklin/workspace/aprendiendoreact/src/component/Form.js"],"names":["React","Component","Ingrediente","Form","constructor","props","state","nombre","calorias","ingredientes","error","deleteIngredient","bind","handleChange","addIngredient","handleClick","event","setState","target","name","value","ing","cant","id","newing","ingrediente","cantidad","length","alert","new","filter","ig","render","map","background","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Ingrediente from './Ingrediente';\n\nclass Form extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            nombre: \"\",\n            calorias: 0,\n            ingredientes: [],\n            error: null\n        }\n        this.deleteIngredient = this.deleteIngredient.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addIngredient = this.addIngredient.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    \n\n    //Function to handle the changes in the form and update the state\n    handleChange(event){\n        this.setState({ \n            [event.target.name]: event.target.value,\n            error: null \n        });\n    }\n\n    //This function catch the data of news ingredients of the Ingredient component \n    //and update the state to add news ingredients\n    addIngredient(ing, cant, id){\n        let newing = {\n            id: id,\n            ingrediente: ing,\n            cantidad: cant\n        }\n        this.setState({\n            ingredientes: [...this.state.ingredientes, newing]\n        });\n    }\n\n    //Function to add a new recipe in the main\n    handleClick(){\n        if(this.state.nombre === \"\" || this.state.ingredientes.length === 0){\n            this.setState({\n                error: true\n            })\n            alert('Debes debes de llenar todos los campos para poder agregar una nueva receta y tener al menos un igrediente');\n        }else{\n            this.props.new(this.state);\n        }\n    }\n\n    //Funsion to delete an ingredient of the list\n    deleteIngredient(id){\n        this.setState({\n            ingredientes: this.state.ingredientes.filter(ig => ig.id !== id)\n        });\n    }\n    \n    render(){\n        return(\n            <section>\n                <h1>Agregar una nueva receta</h1>\n                <form>\n                    <label htmlFor=\"name\">Nombre</label>\n\n                    <input name=\"nombre\" \n                    className={this.state.error ? `is-invalid form-control` : `form-control`}\n                    onChange={this.handleChange} \n                    value={this.state.nombre}/>\n                    <label htmlFor=\"calorias\">Calorias</label>\n                    <input name='calorias' value={this.state.calorias}\n                    className={this.state.error ? `is-invalid form-control` : `form-control`}\n                    onChange={this.handleChange} type=\"number\"/>\n                    <h4>Ingredientes:</h4>\n                </form>\n                <ul>         \n                {\n                    this.state.ingredientes.map((ingrediente) => {\n                        return(\n                            <li key={ingrediente.id}>\n                                <span>{ingrediente.ingrediente}</span>\n                                <span> - </span>\n                                <span>{ingrediente.cantidad} </span>\n                                <button type=\"button\" \n                                style={{background: 'red', color: \"white\"}}\n                                onClick={() => {this.deleteIngredient(ingrediente.id)}}> X </button>\n                            </li>\n                        );\n                    })\n                }\n                </ul>\n                <br/>\n                <button onClick={this.handleClick} className=\"btn btn-primary\">Agregar receta</button>\n                <Ingrediente add={this.addIngredient}/>\n            </section>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}